apply plugin: 'com.android.application'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '6.19'
}

check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/style/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/style/suppressions.xml").absolutePath

    source 'src/main/java'
    include 'org/cosinus/**/*.java'
    exclude '**/gen/**'

    def configProps = ['proj.module.dir': projectDir.absolutePath]
    configProperties configProps

    classpath = files()
}

android {
    compileSdkVersion 31


    defaultConfig {
        applicationId "com.gohub.golauncher"
        minSdkVersion 14
        versionCode 160
        versionName "2.0.1"
    }

    signingConfigs {
        if (project.hasProperty('keystorePassword')) {
            release {
                storeFile file(property('keystoreFile'))
                storePassword property('keystorePassword')
                keyAlias property('keystoreAlias')
                keyPassword property('keystorePassword')
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            proguardFile 'proguard-rules.pro'
            zipAlignEnabled true
            if (project.hasProperty('keystorePassword')) {
                //noinspection GroovyAssignabilityCheck
                signingConfig signingConfigs.release
            }
        }
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true
        }
    }
    lint {
        abortOnError true
        lintConfig file('lint.xml')
    }
    namespace 'com.gohub.golauncher'
}

dependencies {
    implementation 'com.android.support:appcompat-v7:25.4.0'
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}
